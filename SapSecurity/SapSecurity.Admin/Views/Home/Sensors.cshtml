@model System.Collections.Generic.List<SapSecurity.ViewModel.SensorViewModel>

@{
    ViewBag.Title = "Sensor";
    Layout = "_Layout";
}


<div class="row">
    <div class="col-md-12 p-3">
        <div class="btn-group">
            <a class="btn btn-danger">Spray</a>
            <a class="btn bg-warning">Alarm</a>
        </div>
    </div>
</div>

<div class="row">

    <div class="col-md-12">
        <table class="table table-bordered table-hover table-striped table-sm table-responsive">
            <thead class="table-success">
                <tr>
                    <th>نام سنسور</th>
                    <th>وضعیت</th>
                    <th>درصد</th>
                    <th>آخرین مقدار</th>
                    <th>زمان آحرین پیام</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <p> <span>@item.GroupTitle</span>/<span>@item.ZoneTitle</span>/<span>@item.SensorName</span></p>
                        </td>
                        <td>
                            <span id="senS_@item.Id">@item.Status.ToString()</span>
                        </td>
                        <td>
                            @if (item.IsDigital)
                            {
                                <span>-</span>
                            }
                            else
                            {
                                <span class="badge bg-primary rounded-pill" id="senP_@item.Id">
                                    @item.SensPercent
                                </span>
                            }
                        </td>
                        <td>
                            <span id="sen_@item.Identifier">-</span>
                        </td>
                        <td>
                            <span id="alv_@item.Identifier">-</span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div class="row mt-5">
    <p>Logs</p>
    <div class="col-md-12" id="logs">
    </div>
</div>
@section Scripts
    {
    <script>
        webSocket();
        ClearLogs();
        function ClearLogs() {
            setTimeout(function() {
                document.getElementById('logs').innerHTML = '';
                ClearLogs();
            }, 30000);
        }
        function webSocket() {
            var socket = new WebSocket("ws://109.122.199.199:7080/websocket");
            socket.onopen = function(e) {
                var userId = '@ViewBag.UId';
                console.log('send');
                socket.send('<AId>' + userId + '</AId>');
            }
            socket.onmessage = function(data) {
                var message = data.data;
                if (message.includes('<Adm>')) {
                    SetSensorValue(message);
                }

                if (message.includes('<SNo>')) {
                    SetSensorPercent(message);
                }

                if (message.includes('<Adl>')) {
                    SetSensorAlive(message)
                }
                console.log(data);
            }
            socket.onerror = function(data) {
                console.log(data);
            }
            socket.onclose = function(data) {
                console.log(data);
            }
        }

        function SetSensorPercent(message) {
            var sp = message.split('<SNo>');
            for (var i = 0; i < sp.length; i++) {
                var t = sp[i];
                if (t.includes('</SNo>')) {
                    t = t.replace('</SNo>', '');
                    t = t.replace('<SNo>', '');
                    var t2 = t.split(',');
                    if (t2.length == 2) {
                        var sId = t2[0];
                        var status = t2[1];
                        var percent = t2[1];
                        var statusName = GetStatusName(status);
                        document.getElementById('senS_' + sId).innerHTML = status;
                        document.getElementById('senP_' + sId).innerHTML = percent;
                    }
                }
            }
        }
        function GetStatusName(status) {

            switch (Number(status)) {
                case 1: return "Active";
                case 2: return "DeActive";
                case 3: return "Warning";
                case 4: return "Danger";
            }
            return "";
        }

        function SetSensorAlive(message) {
            message = message.replace('</Adl>', '');
            message = message.replace('<Adl>', '');
            var t2 = message.split(',');
            if (t2.length == 2) {
                var sId = t2[0];
                var val = t2[1];
                document.getElementById('alv_' + sId).innerHTML = val;
            }
        }
        function SetSensorValue(message) {
            message = message.replace('</Adm>', '');
            message = message.replace('<Adm>', '');
            let p = document.createElement("p");
            p.innerText = message;
            document.getElementById('logs').prepend(p);
            var sp = message.split('<Sen>');
            for (var i = 0; i < sp.length; i++) {
                var t = sp[i];
                if (t.includes('</Sen>')) {
                    t = t.replace('</Sen>', '');
                    t = t.replace('<Sen>', '');
                    var t2 = t.split(',');
                    if (t2.length == 2) {
                        var sId = t2[0];
                        var val = t2[1];
                        document.getElementById('sen_' + sId).innerHTML = val;
                    }
                }
            }
        }

    </script>
}
